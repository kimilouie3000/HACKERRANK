using System;
using System.Collections.Generic;
using System.Linq;

class Solution
{
    static int luckBalance(int k, int[][] contests)
    {
        int luck = 0;
        List<int> important = new List<int>();

        foreach (var contest in contests)
        {
            int l = contest[0];
            int t = contest[1];

            if (t == 0) // unimportant, always lose
                luck += l;
            else
                important.Add(l);
        }

        // Sort important contests by luck descending
        important.Sort((a, b) => b.CompareTo(a));

        // Lose top k important contests
        for (int i = 0; i < important.Count; i++)
        {
            if (i < k)
                luck += important[i]; // lose
            else
                luck -= important[i]; // win
        }

        return luck;
    }

    static void Main()
    {
        var firstLine = Console.ReadLine().Split();
        int n = int.Parse(firstLine[0]);
        int k = int.Parse(firstLine[1]);

        int[][] contests = new int[n][];
        for (int i = 0; i < n; i++)
        {
            var parts = Console.ReadLine().Split();
            contests[i] = new int[] { int.Parse(parts[0]), int.Parse(parts[1]) };
        }

        Console.WriteLine(luckBalance(k, contests));
    }
}
