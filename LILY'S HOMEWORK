using System;
using System.Collections.Generic;
using System.Linq;

class Solution
{
    static int lilysHomework(int[] arr)
    {
        // Count swaps for ascending and descending
        int swapsAsc = CountSwaps(arr, true);
        int swapsDesc = CountSwaps(arr, false);

        return Math.Min(swapsAsc, swapsDesc);
    }

    static int CountSwaps(int[] arr, bool ascending)
    {
        int n = arr.Length;
        int[] sorted = (int[])arr.Clone();
        Array.Sort(sorted);

        if (!ascending)
            Array.Reverse(sorted);

        // map each value to its index
        Dictionary<int, int> indexMap = new Dictionary<int, int>();
        for (int i = 0; i < n; i++)
            indexMap[arr[i]] = i;

        int swaps = 0;
        int[] tempArr = (int[])arr.Clone();

        for (int i = 0; i < n; i++)
        {
            if (tempArr[i] != sorted[i])
            {
                swaps++;
                int correctValue = sorted[i];

                // index of the correct value in tempArr
                int toSwapIdx = indexMap[correctValue];

                // update indexMap before swapping
                indexMap[tempArr[i]] = toSwapIdx;
                indexMap[correctValue] = i;

                // swap in tempArr
                int tmp = tempArr[i];
                tempArr[i] = tempArr[toSwapIdx];
                tempArr[toSwapIdx] = tmp;
            }
        }

        return swaps;
    }

    static void Main()
    {
        int n = int.Parse(Console.ReadLine());
        int[] arr = Array.ConvertAll(Console.ReadLine().Split(), int.Parse);

        Console.WriteLine(lilysHomework(arr));
    }
}
