using System;

class Solution {
    static string appendAndDelete(string s, string t, int k) {
        int commonLength = 0;
        int minLength = Math.Min(s.Length, t.Length);

        // Find the length of the common prefix
        for (int i = 0; i < minLength; i++) {
            if (s[i] == t[i]) {
                commonLength++;
            } else {
                break;
            }
        }

        int totalOpsNeeded = (s.Length - commonLength) + (t.Length - commonLength);

        if (totalOpsNeeded > k) {
            return "No";
        }
        else if ((k - totalOpsNeeded) % 2 == 0) {
            return "Yes";
        }
        else if (k >= s.Length + t.Length) {
            // Can delete all of s and build t from scratch with extra moves to spare
            return "Yes";
        }
        else {
            return "No";
        }
    }

    static void Main(string[] args) {
        string s = Console.ReadLine();
        string t = Console.ReadLine();
        int k = int.Parse(Console.ReadLine());

        Console.WriteLine(appendAndDelete(s, t, k));
    }
}
