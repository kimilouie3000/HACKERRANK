using System;
using System.Linq;

class Program
{
    static int activityNotifications(int[] expenditure, int d)
    {
        int notifications = 0;
        int[] count = new int[201]; // since expenditures are between 0 and 200

        // Initialize count array with first d days
        for (int i = 0; i < d; i++)
            count[expenditure[i]]++;

        for (int i = d; i < expenditure.Length; i++)
        {
            double median = GetMedian(count, d);

            if (expenditure[i] >= 2 * median)
                notifications++;

            // Slide the window:
            count[expenditure[i - d]]--;   // remove the oldest
            count[expenditure[i]]++;       // add the new one
        }

        return notifications;
    }

    static double GetMedian(int[] count, int d)
    {
        int sum = 0;

        if (d % 2 == 1)
        {
            int mid = d / 2 + 1;
            for (int i = 0; i < count.Length; i++)
            {
                sum += count[i];
                if (sum >= mid)
                    return i;
            }
        }
        else
        {
            int mid1 = d / 2, mid2 = mid1 + 1;
            int m1 = -1, m2 = -1;

            for (int i = 0; i < count.Length; i++)
            {
                sum += count[i];

                if (m1 == -1 && sum >= mid1)
                    m1 = i;
                if (sum >= mid2)
                {
                    m2 = i;
                    break;
                }
            }
            return (m1 + m2) / 2.0;
        }
        return 0; // fallback, should never hit
    }

    static void Main()
    {
        string[] firstLine = Console.ReadLine().Split();
        int n = int.Parse(firstLine[0]);
        int d = int.Parse(firstLine[1]);

        int[] expenditure = Console.ReadLine().Split().Select(int.Parse).ToArray();

        Console.WriteLine(activityNotifications(expenditure, d));
    }
}
